The story thus far...

design family, los angeles, illustration/animation/comics

school
art/aesthetics/literature/history/philsophy

and then...

programming

haskell, hardware architecture, graph theory, mathematics, set theory, graphics, randomization algorithms, language design

user interfaces @ ck-12

fractured atlas / freelancing

rails / liquid / ecommerce / interfaces / javascript / html

continue to explore ways for technology to impact people's lives positively


I come from a design family. Growing up I assumed that everyone was and wanted to be a designer of some sort. And so I always knew that no matter what I did, I would ultimately be designing.

I started college as a Mechanical Engineering major at Northwestern University. I liked the idea of combining my passion for mathematics and the sciences with my family's heritage of design. Besides I just wanted to invent things in the shop. I had a great time using mills and 3d printers (in 2008!) to realize my designs but eventually I grew frustrated with the general structure of the college. I resented how difficult it was to take subject matter that wasn't immediately adjoining. I didn't want to wait until I was a senior to take a class in literature. And I didn't like to think that each class was a discrete field of knowledge, completely cut off from other disciplines and models of thinking.

In 2011 I transferred to the Evergreen State College, a wholly multi-disciplinary school. Evergreen is a school structured in the lineage of John Cage's Black Mountain College or the Bauhaus. Each quarter (and sometimes multiple quarters) are devoted to 'programs', curricula curated by professors from different disciplines as a means of teaching a broader pattern of knowledge. Finally I was able to look at interests I had always been told were opposites simultaneously under unified curricula. It was in 2011 that I took an experimental literature and mathematics class that I read Goedel, Escher, Bach: Eternal Golden Braid, which would set the tone for the rest of my studies. The next quarter I took my first computer science class and programmed for the first time. In the years since, computing has been a part of how I think about the world and become integral to my design process. I became obsessed with graph and set theory, optimizing algorithms in Haskell and Javascript for applications in graphics and games. With Haskell I was able to create compilers for my own languages and create randomly generated stories. I continued my research in randomization and procedural generation in Javascript, eventually working with WebGL on some class projects.

While consuming enough computer science for a Bachelors of Science I was still able to read and write my way through a literature and aesthetics Bachelor of Arts. Programming was always a tool and model for conceptualizing and implementing better designs. Ultimately computing was a way to open up the possibilities for realizing my inventions and ideas, just like the machine shop in my first year at college. It was never a challenge to combine my interests at Evergreen, but ultimately, I began to focus on User Interfaces and Front End development as an obvious way to look at aesthetic design, technology, and experiential design in one focus.

During school I was able to intern at the CK-12 Foundation, where I worked with Javascript building interactive lessons. This was my first foray into user experience design and the first time I was able to program something a non-programmer would use. I experienced user testing sessions and feedback from non technical persons and really came to understand the iterative design process.

After graduating in 2013 I worked as a Junior Developer at Fractured Atlas in New York, where I picked up the Rails development environment. I learned about full-stack web development and contributed on the Artfu.ly web app as well as completing an iterative prototype for an e-learning platform. I turned down a full-time offer to move to work on Artfu.ly in order to work on some personal projects.

Living in Los Angeles again, I built an online record store and a brand website for a local artisan liquor shop. My programming output was decidedly slow during this expanse of a few months. I was researching a project that was not immediately technical in nature, and thus spending a lot of time with my nose in a book while going through an obscene amount of sketchbooks. I never stopped studying. I found myself playing with compilers again, tinkering with pure Javascript ray tracers, and really just experimenting. It was during this stretch that I became quite fluent in HTML/CSS/Javascript and I wanted to see how to expand those technologies into more interesting capabilities.

Going forward I'd like to continue to develop my skills as a designer and engineer. I'm still terribly interested in compilers, graphics, and applied graph/set theory. And I'd love to pursue projects where I can challenge my front-end, interaction design chops. It is probable that I'll continue to do this through Rails/HTML/CSS/Javascript, because those are the tools I've come to understand intricately. If you're reading this and have gotten this far send me an email to talk about any project you might find interesting. I'm always looking to meet people trying to create a positive impact with technology. If my services as a designer or engineer can help realize those, well- all the better.